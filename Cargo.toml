[package]
name = "textr"
version = "0.2.1"
edition = "2021"
description = "TeX-inspired plug-n-play interface for converting JSON documents into PDFs"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/ghovax/textr"
repository = "https://github.com/ghovax/textr"
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
log = "0.4.20" # Logging
env_logger = "0.11.3"
serde = { version = "1.0.197", features = [
    "derive",
] } # Reading and writing JSON files
serde_json = "1.0.114"
clap = { version = "4.5.3", features = [
    "derive",
] } # Parsing command line arguments in the examples
rand = "0.8.5" # Random generation of characters and numbers
rand-utf8 = "0.0.1" # Generation of random UTF-8 codepoints
lopdf = "0.32.0" # Handling the PDF document on a low-level
image = { version = "0.25.1", default-features = false, features = [
    "png",
] } # Loading of images into the PDF
owned_ttf_parser = "0.20.0" # Loading the TTF fonts and extracting their properties
time = "0.3.36" # Obtaining the time
nalgebra-glm = "0.18.0" # Transforming the images through matrices
unicode-normalization = "0.1.23" # Normalizing the document input
similar-asserts = "1.5.0" # Testing different postscript documents

# These crates were ruled out because they are not now employed, but could be useful in the future
# so I have left them here if anyone is willing to implement their usage

# uuid = { version = "1.8.0", features = ["v4", "fast-rng", "macro-diagnostics"] } # For the unique file names
# rayon = "1.10.0" # Parallelism

[profile.dev]
opt-level = 1 # Speeds up the execution time in developer mode without compromising in compile time (is almost equal to -O1)
